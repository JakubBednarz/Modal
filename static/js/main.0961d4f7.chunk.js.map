{"version":3,"sources":["ModalContext.js","ModalHeader.js","ModalContent.js","ModalFooter.js","Modal.js","index.js"],"names":["ModalContext","React","createContext","isOpen","toggle","ModalHeader","className","this","props","title","onClick","context","Component","contextType","ModalContent","children","ModalFooter","clickAlert","e","alert","callToActionLabel","Modal","state","bind","setState","stopPropagation","Provider","value","nonClickable","Footer","Content","Header","App","ReactDOM","render","document","querySelector"],"mappings":"6KAEaA,EAAeC,IAAMC,cAAc,CAACC,OAAQ,QAASC,OAAQ,eCCpEC,E,uKAKE,OACI,yBAAMC,UAAU,mBACX,4BAAKC,KAAKC,MAAMC,OAAS,kDACzB,4BAAQH,UAAU,eAAeI,QAASH,KAAKI,QAAQP,QAAvD,gB,GARSH,IAAMW,WAA1BP,EAEKQ,YAAcb,EAcVK,QChBTS,E,uKAKE,OACI,yBAAKR,UAAU,mBACTC,KAAKC,MAAMO,UAAY,4E,GAPdd,IAAMW,WAA3BE,EAEKD,YAAcb,EAWVc,QCbTE,E,4MAEFC,WAAa,SAACC,GACVC,MAAM,MACN,EAAKR,QAAQP,U,uDAMb,OACI,yBAAKE,UAAU,gCACX,4BAAQA,UAAU,eAAeI,QAASH,KAAKI,QAAQP,QAAvD,UACA,4BAAQE,UAAU,eAAeI,QAASH,KAAKU,YAAaV,KAAKC,MAAMY,mBAAqB,wB,GAblFnB,IAAMW,WAA1BI,EAOKH,YAAcb,EAYVgB,QChBTK,E,kDACF,WAAab,GAAQ,IAAD,8BAChB,cAAMA,IAEDc,MAAQ,CACTnB,QAAQ,GAGZ,EAAKC,OAAS,EAAKA,OAAOmB,KAAZ,gBAPE,E,qDAehBhB,KAAKiB,UAAS,SAAAF,GAAK,MAAK,CACpBnB,QAASmB,EAAMnB,a,mCAIVe,GACTA,EAAEO,oB,+BAIF,OAAIlB,KAAKe,MAAMnB,OAEP,kBAACH,EAAa0B,SAAd,CAAuBC,MAAO,CAACL,MAAOf,KAAKe,MAAOlB,OAAQG,KAAKH,SAC3D,yBAAKE,UAAU,mBAAmBI,QAASH,KAAKH,QAC5C,yBAAKE,UAAU,kBAAkBI,QAASH,KAAKqB,cAC1CrB,KAAKC,MAAMO,YAOxB,6BACI,4BAAQT,UAAU,eAAeI,QAASH,KAAKH,QAA/C,mB,GAvCAH,IAAMW,WAApBS,EAUKQ,OAASb,EAVdK,EAWKS,QAAUhB,EAXfO,EAYKU,OAAS1B,EAZdgB,EAaKR,YAAcb,EAmCVqB,QClDTW,EAAM,WACR,OACI,kBAAC,EAAD,KACI,kBAAC,EAAMD,OAAP,CAActB,MAAO,sBACrB,kBAAC,EAAMqB,QAAP,KACI,+DAEJ,kBAAC,EAAMD,OAAP,CAAcT,kBAAmB,0BAK7Ca,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.0961d4f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ModalContext = React.createContext({isOpen: \"false\", toggle: () => {}});","import React from \"react\";\r\nimport { ModalContext } from \"./ModalContext\";\r\n\r\nclass ModalHeader extends React.Component {\r\n\r\n    static contextType = ModalContext;\r\n    \r\n    render() {\r\n        return(\r\n            <div  className=\"modal-component\">\r\n                 <h1>{this.props.title || \"Tu powinien znajdować się tytuł\"}</h1> \r\n                 <button className=\"modal-button\" onClick={this.context.toggle}>\r\n                     Zamknij\r\n                 </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalHeader","import React from \"react\";\r\nimport { ModalContext } from \"./ModalContext\";\r\n\r\nclass ModalContent extends React.Component {\r\n\r\n    static contextType = ModalContext;\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"modal-component\">\r\n                 {this.props.children || <h1>Tu powinieneś coś wpisać</h1>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalContent ","import React from \"react\";\r\nimport { ModalContext } from \"./ModalContext\";\r\n\r\nclass ModalFooter extends React.Component {\r\n\r\n    clickAlert = (e) => {\r\n        alert(\"OK\");\r\n        this.context.toggle()\r\n    }\r\n\r\n    static contextType = ModalContext;\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"modal-component modal-footer\">\r\n                <button className=\"modal-button\" onClick={this.context.toggle}>Cancel</button>\r\n                <button className=\"modal-button\" onClick={this.clickAlert}>{this.props.callToActionLabel || \"Nazwa przycisku\"}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalFooter ","import React from \"react\";\r\nimport { ModalContext } from \"./ModalContext\";\r\nimport ModalHeader from \"./ModalHeader\";\r\nimport ModalContent from \"./ModalContent\";\r\nimport ModalFooter from \"./ModalFooter\";\r\n\r\nclass Modal extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    };\r\n    static Footer = ModalFooter;\r\n    static Content = ModalContent;\r\n    static Header = ModalHeader;\r\n    static contextType = ModalContext;\r\n\r\n    toggle () {\r\n        this.setState(state => ({\r\n            isOpen: !state.isOpen\r\n          }));\r\n    }\r\n\r\n    nonClickable(e) {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    render () {\r\n        if (this.state.isOpen) {\r\n            return (\r\n                <ModalContext.Provider value={{state: this.state, toggle: this.toggle}}>\r\n                    <div className=\"modal-background\" onClick={this.toggle}>\r\n                        <div className=\"modal-container\" onClick={this.nonClickable}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </ModalContext.Provider>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <button className=\"modal-button\" onClick={this.toggle}>\r\n                        Open Modal\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"./Modal\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <Modal>\r\n            <Modal.Header title={'Tytuł modala'}/>\r\n            <Modal.Content>\r\n                <h1>To powinno zadziałać</h1>\r\n            </Modal.Content>\r\n            <Modal.Footer callToActionLabel={'Udało się'}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}